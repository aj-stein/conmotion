name: Build OCI Image (Transparency Service)

on:
  push:
    paths:
      - '.github/workflows/oci_service.yml'
      - '.python-version'
      - '.tool-versions'
      - 'Containerfile.service'
      - 'conmotion/**'
      - 'pyproject.toml'
      - 'uv.lock'

jobs:
  build:
    name: Build images
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      HOME_REPO: aj-stein/conmotion
      REGISTRY: ghcr.io
      IMAGE_NAME: aj-stein/conmotion/service
      IMAGE_FILE: Containerfile.service
      # Docs: github.com/docker/metadata-action/?tab=readme-ov-file#typesha
      DOCKER_METADATA_PR_HEAD_SHA: true
      # https://github.com/docker/metadata-action?tab=readme-ov-file#annotations
      DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
    runs-on: ubuntu-24.04
    steps:
      - name: Container image QEMU setup for cross-arch builds
        id: image_setup_qemu
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf
      - name: Container image buildx setup for cross-arch builds
        id: image_setup_buildx
        with:
          platforms: linux/amd64,linux/arm64 

        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db
      - if: github.repository == env.HOME_REPO && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/feature'))
        name: Container image login
        id: image_login
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Container image metadata and tag generation
        id: image_metadata
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images:
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=,suffix=,format=long
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr            
          # For now, do not auto-tag latest, maintainers will decided what is
          # release-worthy.
          flavor: |
            latest=true
          annotations:
            maintainers="A.J. Stein <iam@ajstein.me>"
            org.opencontainers.image.authors="A.J. Stein <iam@ajstein.me>"
            org.opencontainers.image.documentation="https://aj-stein.github.io/conmotion/"
            org.opencontainers.image.source="https://github.com/aj-stein/conmotion/blob/main/${{ env.IMAGE_FILE }}"
            org.opencontainers.image.vendor="A.J. Stein"
            org.opencontainers.image.title="Conmotion Service Container"
            org.opencontainers.image.description="Conmotion container with the service entrypoint"
            org.opencontainers.image.licenses="GPL-3.0"
      - if: github.repository == env.HOME_REPO && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/feature'))
        name: Container image registry push
        id: image_registry_push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          file: ./${{ env.IMAGE_FILE }}
          push: true
          tags: ${{ steps.image_metadata.outputs.tags }}
          labels: ${{ steps.image_metadata.outputs.annotations }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - if: github.repository == env.HOME_REPO && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/feature'))
        name: Container image push attestations
        uses: actions/attest-build-provenance@1c608d11d69870c2092266b3f9a6f3abbf17002c
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.image_registry_push.outputs.digest }}
          push-to-registry: false
