name: CD

on:
  push:

jobs:
  build:
    name: Build site
    runs-on: ubuntu-24.04
    steps:
      - id: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
          submodules: true
      - id: build
        name: Build website
        uses: docker://pandoc/core:3.5
        with:
          args: |
            docs/architecture.md -o docs/architecture.html --bibliography docs/references.bib --citeproc --csl vendor/csl/apa-6th-edition.csl
      - id: publish
        name: Copy built site to stage for publication
        run: make publish          
      - id: upload
        name: Upload Build Artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa
        with:
          path: build

  deploy_prod:
    name: Deploy to GitHub Pages
    if: github.ref == 'refs/heads/main'
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-24.04
    steps:
      - id: deployment
        name: Deploy to GitHub Pages
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e
  
  deploy_qa:
    name: Deploy to Netlify
    if: github.ref != 'refs/heads/main'
    needs: build
    permissions:
      deployments: write
    environment:
      name: netlify
    runs-on: ubuntu-24.04
    steps:
      - id: deployment
        name: Start deployment
        uses: bobheadxi/deployments@648679e8e4915b27893bd7dbc35cb504dc915bc8
        with:
          step: start
          env: netlify
      - id: setup
        name: Setup NodeJS and dependencies
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
      - id: netlify
        name: Deploy QA build to Netlify
        run: |
          npx netlify-cli deploy \
            --dir './build' \
            --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --message '${{ github.head_ref || github.ref_name }} ${{ github.sha }}' \
            --json >> deploy_output.json
          echo "deploy_url=$(jq -r '.deploy_url' deploy_output.json)" >> $GITHUB_OUTPUT
      - id: deployment_finish
        name: Finish deployment
        uses: bobheadxi/deployments@648679e8e4915b27893bd7dbc35cb504dc915bc8
        if: always()
        with:
          env: ${{ steps.deployment.outputs.env }}
          step: finish
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ steps.netlify.outputs.deploy_url }}
